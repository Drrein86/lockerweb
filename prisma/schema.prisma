// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum UserRole {
  ADMIN
  COURIER
  CUSTOMER_SERVICE
}

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model User {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  password      String
  firstName     String
  lastName      String
  phone         String?
  role          UserRole
  status        UserStatus  @default(ACTIVE)
  lastLoginAt   DateTime?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  packages      Package[]
  deliveries    Delivery[]
}

model Customer {
  id            Int         @id @default(autoincrement())
  email         String      @unique
  firstName     String
  lastName      String
  phone         String
  address       String?
  packages      Package[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum LockerStatus {
  ONLINE
  OFFLINE
  MAINTENANCE
}

enum CellStatus {
  AVAILABLE
  OCCUPIED
  MAINTENANCE
  LOCKED
  UNLOCKED
}

model Locker {
  id            Int         @id @default(autoincrement())
  name          String      // שם הלוקר
  location      String
  description   String?
  ip            String?     // כתובת IP של הלוקר
  port          Int?        // פורט התקשורת
  deviceId      String?     @unique // מזהה יחודי של הלוקר
  status        LockerStatus @default(OFFLINE)
  lastSeen      DateTime?   // חותמת זמן של חיבור אחרון
  isActive      Boolean     @default(true) // האם הלוקר פעיל
  cells         Cell[]
  packages      Package[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Cell {
  id            Int         @id @default(autoincrement())
  cellNumber    Int         // מספר התא בלוקר (1,2,3...)
  code          String      @unique // קוד יחודי של התא
  name          String?     // שם התא (אופציונלי)
  size          String      // SMALL, MEDIUM, LARGE, WIDE
  status        CellStatus  @default(AVAILABLE)
  isLocked      Boolean     @default(true)
  isActive      Boolean     @default(true) // האם התא פעיל
  lockerId      Int
  locker        Locker      @relation(fields: [lockerId], references: [id])
  packages      Package[]
  lastOpenedAt  DateTime?   // מתי התא נפתח לאחרונה
  lastClosedAt  DateTime?   // מתי התא נסגר לאחרונה
  openCount     Int         @default(0) // מספר פתיחות
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  @@unique([lockerId, cellNumber]) // תא יחודי בלוקר
}

model Package {
  id            Int         @id @default(autoincrement())
  trackingCode  String      @unique
  customerId    Int
  customer      Customer    @relation(fields: [customerId], references: [id])
  courierId     Int
  courier       User        @relation(fields: [courierId], references: [id])
  size          String      // SMALL, MEDIUM, LARGE
  status        String      // WAITING, COLLECTED, EXPIRED
  lockerId      Int
  cellId        Int
  locker        Locker      @relation(fields: [lockerId], references: [id])
  cell          Cell        @relation(fields: [cellId], references: [id])
  delivery      Delivery?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Delivery {
  id            Int         @id @default(autoincrement())
  courierId     Int
  courier       User        @relation(fields: [courierId], references: [id])
  packageId     Int         @unique
  package       Package     @relation(fields: [packageId], references: [id])
  status        String      // PENDING, IN_PROGRESS, COMPLETED, FAILED
  notes         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
